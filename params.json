{"name":"jorm-unit","tagline":"JUnit extension to assist out-of-server automated JPA testing","body":"## Iterate fast while testing, debugging, studying JPA implementations.\r\njorm-unit assists  out-of-server JPA (Java Persistence API) execution. \r\n\r\n- Reuse of `EntityManagerFactory`through all tests in order to speed up execution\r\n- Automatic transaction management\r\n- Loading of test data before test execution using [DBUnit](http://http://dbunit.sourceforge.net/) XML datasets\r\n- Comparison of database state after test against [DBUnit](http://http://dbunit.sourceforge.net/) XML datasets\r\n- Printing of database state at any point during the test\r\n\r\n## Usage\r\n\r\n```java\r\npublic class SampleTest extends JPATest {\r\n\r\n\t@Test\r\n\t@Transactional\r\n\t@BeforeDataSet(fileName = \"initialTestData.xml\")\r\n\t@AfterDataSet(fileName = \"expectedTestData.xml\")\r\n\t@PrintDatabase\r\n\tpublic void testSaveDataAutomaticTransaction() {\r\n\t\tCustomer cust = new Customer(\"Customer 2\");\r\n\t\tgetEntityManager().persist(cust);\r\n\r\n\t\tAssert.assertNotNull(cust.getId());\r\n\t}\r\n\r\n}\r\n```\r\n```\r\nOutput:\r\n\r\nCUSTOMER [2 rows]\r\n________________\r\n| ID| NAME      |\r\n|===============|\r\n| -1| Customer 1|\r\n| 1 | Customer 2|\r\n```\r\n\r\n## Getting started\r\n\r\nYou can jump start using the the Maven `jorm-unit-sample-archetype` or adding jorm-unit to your existing project\r\n\r\n#####Maven archetype\r\n\r\n```\r\nmvn archetype:generate -DarchetypeArtifactId=jorm-unit-sample-archetype -DarchetypeGroupId=org.jorm-unit -DarchetypeVersion=1.0.0\r\n```\r\n\r\nInform `hibernate` or `eclipselink` for the `jpa-provider` property. The generated POM will be setup accordingly\r\n\r\n```\r\n[INFO] Scanning for projects...\r\n[INFO]                                                                         \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building Maven Stub Project (No POM) 1\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n[INFO] >>> maven-archetype-plugin:2.2:generate (default-cli) @ standalone-pom >>>\r\n[INFO] \r\n[INFO] <<< maven-archetype-plugin:2.2:generate (default-cli) @ standalone-pom <<<\r\n[INFO] \r\n[INFO] --- maven-archetype-plugin:2.2:generate (default-cli) @ standalone-pom ---\r\n[INFO] Generating project in Interactive mode\r\nDefine value for property 'groupId': : mycomp\r\nDefine value for property 'artifactId': : myjpatest\r\nDefine value for property 'version':  1.0-SNAPSHOT: : \r\nDefine value for property 'package':  mycomp: : com.mycomp\r\nDefine value for property 'jpa-provider': : hibernate\r\n```\r\n#####Adding jorm-unit to your existing project\r\n\r\n```xml\r\n <dependency>\r\n   \t<groupId>org.jorm-unit</groupId>\r\n    \t<artifactId>jorm-unit</artifactId>\r\n     \t<version>1.0.0</version>\r\n     \t<exclusions>\r\n     \t    <exclusion>\r\n      \t\t\t<groupId>org.eclipse.persistence</groupId>\r\n      \t\t\t<artifactId>javax.persistence</artifactId>\r\n   \t\t\t</exclusion>     \t\t\r\n     \t</exclusions>\r\n     \t<scope>test</scope>\r\n </dependency>\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}